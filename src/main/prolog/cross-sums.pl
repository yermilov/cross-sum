do_following_sequence(11, [2,1], [9,2], 0).
do_following_sequence(11, [9,2], [8,3], 0).
do_following_sequence(11, [8,3], [7,4], 0).
do_following_sequence(11, [7,4], [6,5], 0).
do_following_sequence(11, [6,5], [5,6], 0).
do_following_sequence(11, [5,6], [4,7], 0).
do_following_sequence(11, [4,7], [3,8], 0).
do_following_sequence(11, [3,8], [2,9], 0).
do_following_sequence(11, [2,9], [9,2], 1).

cross_sum(X_CONSTRAINTS, Y_CONSTRAINTS, POSITION) :- 
	repeat, 
	generate_position(X_CONSTRAINTS, POSITION),
	format('POSSITION MAP: ~w~n', [POSITION]),
	fit_vertical_constraints(Y_CONSTRAINTS, POSITION).

generate_position([_ | X_CONSTRAINTS_TAIL], POSITION) :- do_generate_position(X_CONSTRAINTS_TAIL, POSITION, 1).

do_generate_position([], [], _).
do_generate_position([CONSTRAINTS_HEAD | CONSTRAINTS_TAIL], [POSITION_HEAD | POSITION_TAIL], INDEX) :- 
	list_of_one(CONSTRAINTS_HEAD, FIRST_POSITION_HEAD),
	iterate_following_list(FIRST_POSITION_HEAD, POSITION_HEAD, CONSTRAINTS_HEAD),
	format('POSSITION LINE #~w: ~w~n', [INDEX, POSITION_HEAD]),
	fit_one_line_constraints(CONSTRAINTS_HEAD, POSITION_HEAD),
	format('HORIZONTAL POSSITION LINE #~w: ~w~n', [INDEX, POSITION_HEAD]),
	NEW_INDEX is INDEX + 1,
	do_generate_position(CONSTRAINTS_TAIL, POSITION_TAIL, NEW_INDEX).
	
list_of_one([_ | CONSTRAINT_LINE_TAIL], LIST_OF_ONE) :- do_list_of_one(CONSTRAINT_LINE_TAIL, LIST_OF_ONE, 1, []).

do_list_of_one([], LIST, _, LIST).
do_list_of_one([CONSTRAINT_LINE_HEAD | CONSTRAINT_LINE_TAIL], LIST, ELEMENT, ACCUMULATOR) :- 
	CONSTRAINT_LINE_HEAD = 0,
	NEW_ELEMENT is ELEMENT + 1,
	do_list_of_one(CONSTRAINT_LINE_TAIL, LIST, NEW_ELEMENT, [ELEMENT | ACCUMULATOR]).
do_list_of_one([CONSTRAINT_LINE_HEAD | CONSTRAINT_LINE_TAIL], NEW_LIST, _, ACCUMULATOR) :- 
	CONSTRAINT_LINE_HEAD =\= 0,
	append_element(ACCUMULATOR, 0, TEMP_LIST),
	append(TEMP_LIST, LIST, NEW_LIST),
	do_list_of_one(CONSTRAINT_LINE_TAIL, LIST, 1, []).

iterate_following_list(FIRST_LIST, FOLLOWING_LIST, CONSTRAINT_LINE) :- following_list(CONSTRAINT_LINE, FIRST_LIST, FOLLOWING_LIST).
iterate_following_list(FIRST_LIST, FOLLOWING_LIST, CONSTRAINT_LINE) :- 
	following_list(CONSTRAINT_LINE, FIRST_LIST, ITERATE_LIST), iterate_following_list(ITERATE_LIST, FOLLOWING_LIST, CONSTRAINT_LINE).

following_list([CONSTRAINT_LINE_HEAD | CONSTRAINT_LINE_TAIL], LIST, FOLLOWING_TAIL) :- 
	do_following_list(CONSTRAINT_LINE_HEAD, [], CONSTRAINT_LINE_TAIL, LIST, FOLLOWING_TAIL).

do_following_list(NEEDED_SUM, PLACEHOLDER_LIST, _, [], FOLLOWING_SEQUENCE) :- 
	do_following_sequence(NEEDED_SUM, PLACEHOLDER_LIST, FOLLOWING_SEQUENCE, 0).
do_following_list(NEEDED_SUM, PLACEHOLDER_LIST, [CONSTRAINT_LINE_HEAD | _], [_ | LIST_TAIL], FOLLOWING_LIST) :- 
	CONSTRAINT_LINE_HEAD =\= 0,
	do_following_sequence(NEEDED_SUM, PLACEHOLDER_LIST, FOLLOWING_SEQUENCE, 0),
	append_element(FOLLOWING_SEQUENCE, 0, TEMPORARY_SEQUENCE),
	append(TEMPORARY_SEQUENCE, LIST_TAIL, FOLLOWING_LIST).	
do_following_list(NEEDED_SUM, PLACEHOLDER_LIST, [CONSTRAINT_LINE_HEAD | CONSTRAINT_LINE_TAIL], [_ | LIST_TAIL], FOLLOWING_LIST) :- 
	CONSTRAINT_LINE_HEAD =\= 0,
	do_following_sequence(NEEDED_SUM, PLACEHOLDER_LIST, FOLLOWING_SEQUENCE, 1),
	do_following_list(CONSTRAINT_LINE_HEAD, [], CONSTRAINT_LINE_TAIL, LIST_TAIL, FOLLOWING_LIST_TAIL),
	append_element(FOLLOWING_SEQUENCE, 0, TEMPORARY_SEQUENCE),
	append(TEMPORARY_SEQUENCE, FOLLOWING_LIST_TAIL, FOLLOWING_LIST).	
do_following_list(NEEDED_SUM, PLACEHOLDER_LIST, [CONSTRAINT_LINE_HEAD | CONSTRAINT_LINE_TAIL], [LIST_HEAD | LIST_TAIL], FOLLOWING_LIST) :- 
	CONSTRAINT_LINE_HEAD = 0,
	append_element(PLACEHOLDER_LIST, LIST_HEAD, NEW_PLACEHOLDER_LIST),
	do_following_list(NEEDED_SUM, NEW_PLACEHOLDER_LIST, CONSTRAINT_LINE_TAIL, LIST_TAIL, FOLLOWING_LIST).
	
append_element([], ELEMENT, [ELEMENT]).
append_element([LIST_HEAD | LIST_TAIL], ELEMENT, [LIST_HEAD | APPEND_TAIL]) :- append_element(LIST_TAIL, ELEMENT, APPEND_TAIL).

do_following_sequence(_, [], [], 1) .
do_following_sequence(NEEDED_SUM, [9 | SEQUENCE_TAIL], [1 | FOLLOWING_TAIL], LAST_SEQUENCE) :- do_following_sequence(NEEDED_SUM, SEQUENCE_TAIL, FOLLOWING_TAIL, LAST_SEQUENCE).
do_following_sequence(_, [SEQUENCE_HEAD | SEQUENCE_TAIL], [FOLLOWING_HEAD | SEQUENCE_TAIL], 0) :- SEQUENCE_HEAD < 9, FOLLOWING_HEAD is SEQUENCE_HEAD + 1.

fit_one_line_constraints([CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], POSITON_LINE) :- 
	CONSTRAINTS_LINE_HEAD > 0, is_fit_one_line_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE, CONSTRAINTS_LINE_HEAD, []).
fit_one_line_constraints([CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], POSITON_LINE) :- 
	CONSTRAINTS_LINE_HEAD =< 0, skip_one_line_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE, []).

is_fit_one_line_constraints([], [], 0, _).
is_fit_one_line_constraints([CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], [_ | POSITON_LINE_TAIL], POINTS_LEFT, _) :- 
	CONSTRAINTS_LINE_HEAD > 0, POINTS_LEFT = 0, 
	is_fit_one_line_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE_TAIL, CONSTRAINTS_LINE_HEAD, []).
is_fit_one_line_constraints([CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], [_ | POSITON_LINE_TAIL], POINTS_LEFT, _) :- 
	CONSTRAINTS_LINE_HEAD < 0, POINTS_LEFT = 0, 
	skip_one_line_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE_TAIL, []).
is_fit_one_line_constraints([CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], [POSITON_LINE_HEAD | POSITON_LINE_TAIL], POINTS_LEFT, USED_NUMBERS) :- 
	CONSTRAINTS_LINE_HEAD = 0, POINTS_LEFT >= 0, not_contains(POSITON_LINE_HEAD, USED_NUMBERS), NEW_POINTS_LEFT is POINTS_LEFT - POSITON_LINE_HEAD, 
	is_fit_one_line_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE_TAIL, NEW_POINTS_LEFT, [POSITON_LINE_HEAD | USED_NUMBERS]).
	
skip_one_line_constraints([], [], _).
skip_one_line_constraints([CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], [_ | POSITON_LINE_TAIL], _) :- 
	CONSTRAINTS_LINE_HEAD > 0, is_fit_one_line_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE_TAIL, CONSTRAINTS_LINE_HEAD, []).
skip_one_line_constraints([CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], [_ | POSITON_LINE_TAIL], _) :- 
	CONSTRAINTS_LINE_HEAD < 0, skip_one_line_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE_TAIL, []).
skip_one_line_constraints([CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], [POSITON_LINE_HEAD | POSITON_LINE_TAIL], USED_NUMBERS) :- 
	CONSTRAINTS_LINE_HEAD = 0, not_contains(POSITON_LINE_HEAD, USED_NUMBERS), skip_one_line_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE_TAIL, [POSITON_LINE_HEAD | USED_NUMBERS]).

not_contains(_, []).
not_contains(ELEMENT, [ELEMENT | _]) :- false.
not_contains(ELEMENT, [LIST_HEAD | LIST_TAIL]) :- LIST_HEAD =\= ELEMENT, not_contains(ELEMENT, LIST_TAIL).

fit_vertical_constraints([[_ | Y_CONSTRAINTS_HEAD] | Y_CONSTRAINTS_TAIL], POSITION) :- 
	generate_empty_list_list(POSITION, EMPTY_LIST_LIST),
	is_fit_vertical_constraints(Y_CONSTRAINTS_TAIL, POSITION, Y_CONSTRAINTS_HEAD, EMPTY_LIST_LIST, Y_CONSTRAINTS_HEAD).

is_fit_vertical_constraints([], [], POINTS_LEFT_LIST, _, SKIP_LIST) :- all_zeros(POINTS_LEFT_LIST, SKIP_LIST).
is_fit_vertical_constraints([CONSTRAINTS_HEAD | CONSTRAINTS_TAIL], [POSITION_HEAD | POSITION_TAIL], POINTS_LEFT_LIST, USED_NUMBERS_LIST, SKIP_LIST) :- 
	process_vertical_constraints(CONSTRAINTS_HEAD, POSITION_HEAD, POINTS_LEFT_LIST, USED_NUMBERS_LIST, SKIP_LIST, NEW_POINTS_LEFT_LIST, NEW_USED_NUMBERS_LIST, NEW_SKIP_LIST),
	is_fit_vertical_constraints(CONSTRAINTS_TAIL, POSITION_TAIL, NEW_POINTS_LEFT_LIST, NEW_USED_NUMBERS_LIST, NEW_SKIP_LIST).

process_vertical_constraints([_ | CONSTRAINTS_LINE_TAIL], POSITION_HEAD, POINTS_LEFT_LIST, USED_NUMBERS_LIST, SKIP_LIST, NEW_POINTS_LEFT_LIST, NEW_USED_NUMBERS_LIST, NEW_SKIP_LIST) :- 
	do_process_vertical_constraints(CONSTRAINTS_LINE_TAIL, POSITION_HEAD, POINTS_LEFT_LIST, USED_NUMBERS_LIST, SKIP_LIST, NEW_POINTS_LEFT_LIST, NEW_USED_NUMBERS_LIST, NEW_SKIP_LIST).
	
do_process_vertical_constraints([], [], _, _, _, [], [], []).
do_process_vertical_constraints(
		[CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], 
		[_ | POSITON_LINE_TAIL], 
		[POINTS_LEFT_HEAD | POINTS_LEFT_TAIL], 
		[_ | USER_NUMBERS_TAIL], 
		[SKIP_LIST_HEAD | SKIP_LIST_TAIL],
		[CONSTRAINTS_LINE_HEAD | NEW_POINTS_LEFT_LIST], 
		[[] | NEW_USED_NUMBERS_LIST],
		[CONSTRAINTS_LINE_HEAD | NEW_SKIP_LIST_TAIL]
	) :- 
	CONSTRAINTS_LINE_HEAD =\= 0, SKIP_LIST_HEAD > 0,
	POINTS_LEFT_HEAD = 0,
	do_process_vertical_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE_TAIL, POINTS_LEFT_TAIL, USER_NUMBERS_TAIL, SKIP_LIST_TAIL, NEW_POINTS_LEFT_LIST, NEW_USED_NUMBERS_LIST, NEW_SKIP_LIST_TAIL).
do_process_vertical_constraints(
		[CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], 
		[_ | POSITON_LINE_TAIL], 
		[_ | POINTS_LEFT_TAIL], 
		[_ | USER_NUMBERS_TAIL], 
		[SKIP_LIST_HEAD | SKIP_LIST_TAIL],
		[CONSTRAINTS_LINE_HEAD | NEW_POINTS_LEFT_LIST], 
		[[] | NEW_USED_NUMBERS_LIST],
		[CONSTRAINTS_LINE_HEAD | NEW_SKIP_LIST_TAIL]
	) :- 
	CONSTRAINTS_LINE_HEAD =\= 0, SKIP_LIST_HEAD =< 0,
	do_process_vertical_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE_TAIL, POINTS_LEFT_TAIL, USER_NUMBERS_TAIL, SKIP_LIST_TAIL, NEW_POINTS_LEFT_LIST, NEW_USED_NUMBERS_LIST, NEW_SKIP_LIST_TAIL).
do_process_vertical_constraints(
		[CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], 
		[POSITON_LINE_HEAD | POSITON_LINE_TAIL], 
		[POINTS_LEFT_HEAD | POINTS_LEFT_TAIL], 
		[USED_NUMBERS_HEAD | USER_NUMBERS_TAIL], 
		[SKIP_LIST_HEAD | SKIP_LIST_TAIL],
		[NEW_POINTS_LEFT_HEAD | NEW_POINTS_LEFT_LIST], 
		[[POSITON_LINE_HEAD | USED_NUMBERS_HEAD] | NEW_USED_NUMBERS_LIST],
		[SKIP_LIST_HEAD | NEW_SKIP_LIST_TAIL]
	) :- 
	CONSTRAINTS_LINE_HEAD = 0, SKIP_LIST_HEAD > 0,
	POINTS_LEFT_HEAD >= 0, not_contains(POSITON_LINE_HEAD, USED_NUMBERS_HEAD), NEW_POINTS_LEFT_HEAD is POINTS_LEFT_HEAD - POSITON_LINE_HEAD,
	do_process_vertical_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE_TAIL, POINTS_LEFT_TAIL, USER_NUMBERS_TAIL, SKIP_LIST_TAIL, NEW_POINTS_LEFT_LIST, NEW_USED_NUMBERS_LIST, NEW_SKIP_LIST_TAIL).
do_process_vertical_constraints(
		[CONSTRAINTS_LINE_HEAD | CONSTRAINTS_LINE_TAIL], 
		[POSITON_LINE_HEAD | POSITON_LINE_TAIL], 
		[POINTS_LEFT_HEAD | POINTS_LEFT_TAIL], 
		[USED_NUMBERS_HEAD | USER_NUMBERS_TAIL], 
		[SKIP_LIST_HEAD | SKIP_LIST_TAIL],
		[NEW_POINTS_LEFT_HEAD | NEW_POINTS_LEFT_LIST], 
		[[POSITON_LINE_HEAD | USED_NUMBERS_HEAD] | NEW_USED_NUMBERS_LIST],
		[SKIP_LIST_HEAD | NEW_SKIP_LIST_TAIL]
	) :- 
	CONSTRAINTS_LINE_HEAD = 0, SKIP_LIST_HEAD =< 0,
	not_contains(POSITON_LINE_HEAD, USED_NUMBERS_HEAD),
	NEW_POINTS_LEFT_HEAD is POINTS_LEFT_HEAD - POSITON_LINE_HEAD,
	do_process_vertical_constraints(CONSTRAINTS_LINE_TAIL, POSITON_LINE_TAIL, POINTS_LEFT_TAIL, USER_NUMBERS_TAIL, SKIP_LIST_TAIL, NEW_POINTS_LEFT_LIST, NEW_USED_NUMBERS_LIST, NEW_SKIP_LIST_TAIL).
	
generate_empty_list_list([], []).
generate_empty_list_list([_ | TAIL], [[] | LIST]) :- generate_empty_list_list(TAIL, LIST).

all_zeros([], []).
all_zeros([0 | TAIL], [SKIP_LIST_HEAD | SKIP_LIST_TAIL]) :- SKIP_LIST_HEAD > 0, all_zeros(TAIL, SKIP_LIST_TAIL).
all_zeros([_ | TAIL], [SKIP_LIST_HEAD | SKIP_LIST_TAIL]) :- SKIP_LIST_HEAD =< 0, all_zeros(TAIL, SKIP_LIST_TAIL).